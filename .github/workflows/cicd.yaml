name: cicd

# Permissões necessárias para o workflow
permissions:
  contents: write
  pull-requests: write

on:
  push:
    paths:
      - src/**
      - charts/**
      - Dockerfile
      - requirements.txt
    branches:
      - main
  # Permitir execução manual
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: raftriani/python-app:${{ env.COMMIT_ID }}
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Modify values file
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/python-app/values.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'charts/python-app/values.yaml'
          message: 'Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}'
          default_author: github_actions
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/download/v2.13.1/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - name: Setup port-forward for ArgoCD
        shell: bash
        run: |
          # Configurar port-forward para acessar ArgoCD
          kubectl port-forward -n ingress-nginx svc/ingress-nginx-controller 8080:443 &
          sleep 5

      - name: Argocd app sync
        shell: bash
        run: |
          argocd login localhost:8080 \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}
          argocd app sync python-app
          argocd app sync python-app
